// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travelling.Data;
using Travelling.Models;

namespace Travelling.Data.Migrations
{
    [DbContext(typeof(TravellingContext))]
    [Migration("20180804220838_jsagdflkhdsagf")]
    partial class jsagdflkhdsagf
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Travelling.Models.CustomerCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int>("CardType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("CustomerCards");
                });

            modelBuilder.Entity("Travelling.Models.SeatingClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("Char(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("SeatingClasses");
                });

            modelBuilder.Entity("Travelling.Models.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Town")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("Travelling.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonalCardId");

                    b.Property<decimal>("Price");

                    b.Property<string>("SeatingPlace")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("TripId");

                    b.HasKey("Id");

                    b.HasIndex("PersonalCardId");

                    b.HasIndex("TripId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Travelling.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TrainNumber")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.HasAlternateKey("TrainNumber");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Travelling.Models.TrainSeats", b =>
                {
                    b.Property<int>("TrainId");

                    b.Property<int>("SeatingClassId");

                    b.Property<int>("Quantity");

                    b.HasKey("TrainId", "SeatingClassId");

                    b.HasIndex("SeatingClassId");

                    b.ToTable("TrainSeatClasses");
                });

            modelBuilder.Entity("Travelling.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<int>("DestinationStationid");

                    b.Property<int>("OriginStationId");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<TimeSpan>("TimeDifference");

                    b.Property<int>("TrainId");

                    b.HasKey("Id");

                    b.HasIndex("DestinationStationid");

                    b.HasIndex("OriginStationId");

                    b.HasIndex("TrainId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("Travelling.Models.Ticket", b =>
                {
                    b.HasOne("Travelling.Models.CustomerCard", "PersonalCard")
                        .WithMany()
                        .HasForeignKey("PersonalCardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Travelling.Models.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Travelling.Models.TrainSeats", b =>
                {
                    b.HasOne("Travelling.Models.SeatingClass", "SeatingClass")
                        .WithMany("TrainSeatClasses")
                        .HasForeignKey("SeatingClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Travelling.Models.Train", "Train")
                        .WithMany("TrainSeatClasses")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Travelling.Models.Trip", b =>
                {
                    b.HasOne("Travelling.Models.Station", "DestinationStation")
                        .WithMany("Arrivals")
                        .HasForeignKey("DestinationStationid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Travelling.Models.Station", "OriginStation")
                        .WithMany("Departures")
                        .HasForeignKey("OriginStationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Travelling.Models.Train", "Train")
                        .WithMany("Trips")
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
